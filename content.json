{"meta":{"title":"TinTin","subtitle":"吾日糁省五升！","description":"学习matlab/python/HTML5/c/c++/机器学习/贝叶斯网络中~~~","author":"TinTin","url":"https://tintingo.github.io"},"pages":[{"title":"","date":"2018-01-31T11:57:34.229Z","updated":"2018-01-31T11:57:34.229Z","comments":true,"path":"download.html","permalink":"https://tintingo.github.io/download.html","excerpt":"","text":"贝叶斯工具箱BNT： 点击以上按钮即可下载 下载后将文件解压放到到Matlab安装目录的toolbox目录下,然后再在命令窗口下输入如下代码：addpath(genpath(‘D:...\\toolbox\\bnt_master’));savepath; 输入代码检验：which test_BNT.m 若返回路径则成功。 第一个MFC： 点击以上按钮即可下载 此文件为首页博文“第一个MFC”中的源程序 第一个Matlab-GUI： 点击以上按钮即可下载 此文件为首页博文“如何用Matlab设计GUI？”中的源程序 Matlab关联.m文件： 点击以上按钮即可下载 （1）解压后，运行matlab软件 - &gt;打开 - &gt; associateFiles.m - &gt; F5运行 （2）运行完毕后文件夹中会生成一个.reg的文件，双击该文件，完成即可（3）找一个.m文件，右键 - &gt;打开方式，若有matlab选项，说明关联成功 Matlab画柱状图： 点击以上按钮即可下载 此文件为画柱状图的matlab程序 中文文本分类语料库： 点击以上按钮即可下载 此文件为中文文本分类语料库，包含20多个类别"},{"title":"","date":"2018-01-17T12:12:44.955Z","updated":"2018-01-17T12:12:44.955Z","comments":true,"path":"comments.html","permalink":"https://tintingo.github.io/comments.html","excerpt":"","text":"# 欢迎留言讨论 #"},{"title":"","date":"2018-01-08T11:47:29.753Z","updated":"2017-12-25T12:52:30.610Z","comments":true,"path":"life.html","permalink":"https://tintingo.github.io/life.html","excerpt":"","text":""},{"title":"","date":"2018-01-08T11:47:29.761Z","updated":"2017-10-26T08:36:59.167Z","comments":true,"path":"BAG/bag02.html","permalink":"https://tintingo.github.io/BAG/bag02.html","excerpt":"","text":"【DMAIL官网】 .result{font-weight:bold} #container{width:100%;} #header{width:1000px;margin:0 auto;heigth:100px;} #main{width:1000px;margin:0 auto;heigth:400px;} #side{float:right;width:50px;} #side0{float:center;width:500px;} #footer{width:1000px;margin:0 auto;height:50px;} td{color:navy;padding:15px;heigth:200px;border:1px solid white;} #film{font:8em;color:black;width:50px;} .aa{width:16px;height:16px;} .bb{width:60px;height:60px;} *{margin:0;padding:0;} li{list-style:none;} .focuspic{height:450px;position:relative;overflow:hidden;width:900px;} .showpic1{background:#A9A9A9;height:500px;} .focuspic li a{display:block;height:500px;width:100%;} .focuspic .num{position:absolute;left:50%;margin-left:65px;bottom:5px;} .focuspic .num a{border-radius:0px;width:10px;height:10px;text-indent:-999999px;background:rgb(160,160,255);display:block;margin-right:10px;float:left;cursor:pointer;} .focuspic .num .cur{background:#111111;} $(document).ready(function() { var sw1 = 0; var hlen1=$(\".focuspic>ul>li\").length; for(var j=1;j"},{"title":"","date":"2018-01-08T11:47:29.757Z","updated":"2017-12-22T13:39:17.941Z","comments":true,"path":"BAG/bag.html","permalink":"https://tintingo.github.io/BAG/bag.html","excerpt":"","text":"【DMAIL官网】 .result{font-weight:bold} #container{width:100%;} #header{width:1000px;margin:0 auto;heigth:100px;} #main{width:1000px;margin:0 auto;heigth:400px;} #side{float:right;width:50px;} #side0{float:center;width:500px;} #footer{width:1000px;margin:0 auto;height:50px;} td{color:navy;padding:15px;heigth:200px;border:1px solid white;} #film{font:8em;color:black;width:50px;} .aa{width:16px;height:16px;} .bb{width:60px;height:60px;} *{margin:0;padding:0;} li{list-style:none;} .focuspic{height:450px;position:relative;overflow:hidden;width:900px;} .showpic1{background:#A9A9A9;height:500px;} .focuspic li a{display:block;height:500px;width:100%;} .focuspic .num{position:absolute;left:50%;margin-left:65px;bottom:5px;} .focuspic .num a{border-radius:0px;width:10px;height:10px;text-indent:-999999px;background:rgb(160,160,255);display:block;margin-right:10px;float:left;cursor:pointer;} .focuspic .num .cur{background:#111111;} $(document).ready(function() { var sw1 = 0; var hlen1=$(\".focuspic>ul>li\").length; for(var j=1;j"},{"title":"","date":"2018-01-08T11:47:29.763Z","updated":"2017-10-26T08:36:59.167Z","comments":true,"path":"BAG/bag03.html","permalink":"https://tintingo.github.io/BAG/bag03.html","excerpt":"","text":"【DMAIL官网】 .result{font-weight:bold} #container{width:100%;} #header{width:1000px;margin:0 auto;heigth:100px;} #main{width:1000px;margin:0 auto;heigth:400px;} #side{float:right;width:50px;} #side0{float:center;width:500px;} #footer{width:1000px;margin:0 auto;height:50px;} td{color:navy;padding:15px;heigth:200px;border:1px solid white;} #film{font:8em;color:black;width:50px;} .aa{width:16px;height:16px;} .bb{width:60px;height:60px;} *{margin:0;padding:0;} li{list-style:none;} .focuspic{height:450px;position:relative;overflow:hidden;width:900px;} .showpic1{background:#A9A9A9;height:500px;} .focuspic li a{display:block;height:500px;width:100%;} .focuspic .num{position:absolute;left:50%;margin-left:65px;bottom:5px;} .focuspic .num a{border-radius:0px;width:10px;height:10px;text-indent:-999999px;background:rgb(160,160,255);display:block;margin-right:10px;float:left;cursor:pointer;} .focuspic .num .cur{background:#111111;} $(document).ready(function() { var sw1 = 0; var hlen1=$(\".focuspic>ul>li\").length; for(var j=1;j"},{"title":"","date":"2018-01-08T11:47:29.759Z","updated":"2017-10-26T08:36:59.167Z","comments":true,"path":"BAG/bag01.html","permalink":"https://tintingo.github.io/BAG/bag01.html","excerpt":"","text":"【DMAIL官网】 .result{font-weight:bold} #container{width:100%;} #header{width:1000px;margin:0 auto;heigth:100px;} #main{width:1000px;margin:0 auto;heigth:400px;} #side{float:right;width:50px;} #side0{float:center;width:500px;} #footer{width:1000px;margin:0 auto;height:50px;} td{color:navy;padding:15px;heigth:200px;border:1px solid white;} #film{font:8em;color:black;width:50px;} .aa{width:16px;height:16px;} .bb{width:60px;height:60px;} *{margin:0;padding:0;} li{list-style:none;} .focuspic{height:450px;position:relative;overflow:hidden;width:900px;} .showpic1{background:#A9A9A9;height:500px;} .focuspic li a{display:block;height:500px;width:100%;} .focuspic .num{position:absolute;left:50%;margin-left:65px;bottom:5px;} .focuspic .num a{border-radius:0px;width:10px;height:10px;text-indent:-999999px;background:rgb(160,160,255);display:block;margin-right:10px;float:left;cursor:pointer;} .focuspic .num .cur{background:#111111;} $(document).ready(function() { var sw1 = 0; var hlen1=$(\".focuspic>ul>li\").length; for(var j=1;j"},{"title":"","date":"2018-01-08T11:47:29.845Z","updated":"2017-12-15T02:06:11.595Z","comments":true,"path":"images/about.html","permalink":"https://tintingo.github.io/images/about.html","excerpt":"","text":"about|TINTIN"},{"title":"","date":"2018-01-08T11:47:29.793Z","updated":"2017-10-26T08:36:59.167Z","comments":true,"path":"BAG/images/dd.css","permalink":"https://tintingo.github.io/BAG/images/dd.css","excerpt":"","text":"/**基本格式开始***************/ body,div,ul,ol,li,dl,dt,dd,h1,h2,h3,h4,h5,h6,form,input,textarea,p { margin:0px; padding:0px; font-size:13px; } ul { list-style:none; } img,a img { border:none; } a { text-decoration:none; } a:hover { text-decoration:underline; } .auto { width:1310px; margin:0 auto; } /**基本格式结束***************/ body{background:url(pag_bg.png);width:100%;} #top { height:100px; margin-top:15px; } #top .nav { align:center; height:46px; background:url(mainnav_bg.gif) repeat-x; } #top .nav .same { width:10px; height:46px; } #top .nav .left { float:left; } #top .nav .right { float:right; } #top .nav .mainNav { width:1290px; float:left; } #top .nav .mainNav .logo { width:166px; height:46px; display:block; float:left; } #top .nav .mainNav ul { width:1290px; height:46px; float:left; } #top .nav .mainNav ul li { float:left; } #top .nav .mainNav ul li a { color:#576267; font-size:14px; display:block; width:135px; height:46px; line-height:46px; text-align:center; background:url(main_line.gif) no-repeat; } #top .nav .mainNav ul li a:hover { text-decoration:none; background:url(blue_bg.jpg); color:#ffffff; } #top .nav1 a { color:#979693; float:left; } #top .nav1 a :hover { text-decoration:none; float:left; } #top .nav1 a .cart:hover { color:#43B43E; } #top .nav1 a .center{ width:20px; float:left; #top .nav1 form .search { margin:10px 20px 0 0; float:left; display:inline; width:186px; height:23px; background:url(search_03.gif) no-repeat; } #top .nav1 form .search .keywords { width:140px; height:18px; display:inline; float:right; border:0px solid #cccccc; margin:2px 0 0 10px; } #top .nav1 form .search .btn { width:15px; height:16px; background:url(search_biao.gif); border:none; cursor:pointer; margin:4px 0 0 6px; display:inline; float:right; } #position { height:40px; line-height:40px; border-top:2px solid #F18336; color:#979693; } #position a { color:#333333; } #bottom { text-align:center; padding:50px 0; } #bottom p { color:#999999; } #bottom p a { color:#999999; font-size:30px; } @media screen and (max-device-width: 480px) { #divMain{ float: none; width:auto; } #divSidebar { display:none; } }"},{"title":"","date":"2018-01-08T11:47:29.799Z","updated":"2017-10-26T08:36:59.167Z","comments":true,"path":"BAG/images/list.css","permalink":"https://tintingo.github.io/BAG/images/list.css","excerpt":"","text":"#list { border:1px solid #EDEDED; padding:0 0 90px 0; } #list .listTitle { height:32px; background:url(category_tit.gif) repeat-x; } #list .listTitle .sort { float:right; display:inline; width:205px; height:20px; margin:6px 20px 0 0; } #list .listTitle h2 { width:100px; float:left; color:#666666; line-height:32px; text-indent:15px; } #list .imgList ul li { width:234px; float:left; text-align:center; } #list .imgList ul li p { color:#979693; } #list .imgList ul li p.p1 { text-decoration:line-through; } #list .imgList ul li p.p2 { color:#F6835D; } #list .imgList ul li img.litpic { margin-top:50px; }"},{"title":"","date":"2018-01-08T11:47:29.795Z","updated":"2017-10-26T08:36:59.167Z","comments":true,"path":"BAG/images/demo.css","permalink":"https://tintingo.github.io/BAG/images/demo.css","excerpt":"","text":"#main { clear:both; background:url(main_bg.jpg) repeat-x; } #main .auto .img1 { border:2px solid #666666; display:block; } #main .auto .title { height:40px; line-height:40px; background:url(cat_tit.gif) bottom left no-repeat; margin:10px 0 0 0; } #main .auto .title h2 { color:#545351; font-family:΢���ź�; font-size:16px; width:200px; float:left; } #main .auto .title a { float:right; color:#666666; } #main .auto .box .imgList { width:238px; height:302px; border-left:1px solid #E1E1E1; border-bottom:1px solid #E1E1E1; float:left; } #main .auto .box .imgList4 { width:241px; border-right:1px solid #E1E1E1; } #main .auto .box .imgList img { display:block; margin:40px auto; } #main .auto .box .imgList p { width:180px; margin:0 auto; line-height:23px; color:#979693; } #main .auto .box .imgList p a { color:#979693; } #main .auto .brand { border-bottom:1px solid #E8E8E8; padding:20px 0px 25px 0px; }"},{"title":"","date":"2018-01-08T11:47:29.797Z","updated":"2017-10-26T08:36:59.167Z","comments":true,"path":"BAG/images/details.css","permalink":"https://tintingo.github.io/BAG/images/details.css","excerpt":"","text":"#details .shopImg { width:350px; float:left; } #details .shopDetails { width:610px; float:right; } #details .shopDetails dl dt { color:#666666; font-weight:bold; border-bottom:1px solid #999999; padding:0px 0px 10px 0; } #details .shopDetails dl dd { border-bottom:1px dashed #999999; padding:12px 0 8px 0; text-indent:5px; color:#666666; } #details .shopDetails dl dd input.count { text-align:center; }"},{"title":"","date":"2018-01-08T11:47:29.816Z","updated":"2017-10-26T08:36:59.167Z","comments":true,"path":"BAG/images/public.css","permalink":"https://tintingo.github.io/BAG/images/public.css","excerpt":"","text":"/**������ʽ��ʼ***************/ body,div,ul,ol,li,dl,dt,dd,h1,h2,h3,h4,h5,h6,form,input,textarea,p { margin:0px; padding:0px; font-size:13px; } ul { list-style:none; } img,a img { border:none; } a { text-decoration:none; } a:hover { text-decoration:underline; } .auto { width:1020px; margin:0 auto; } /**������ʽ����***************/ body{background:url(pag_bg.png);} #top { height:100px; margin-top:15px; } #top .nav { height:46px; background:url(mainnav_bg.gif) repeat-x; } #top .nav .same { width:10px; height:46px; } #top .nav .left { float:left; } #top .nav .right { float:right; } #top .nav .mainNav { width:1000px; float:left; } #top .nav .mainNav .logo { width:166px; height:46px; display:block; float:left; } #top .nav .mainNav ul { width:1000px; height:46px; float:left; } #top .nav .mainNav ul li { float:left; } #top .nav .mainNav ul li a { color:#576267; font-size:14px; display:block; width:135px; height:46px; line-height:46px; text-align:center; background:url(main_line.gif) no-repeat; } #top .nav .mainNav ul li a :hover { text-decoration:none; background:url(blue_bg.jpg); color:#ffffff; } #top .nav1 a { color:#979693; float:left; } #top .nav1 a :hover { text-decoration:none; float:left; } #top .nav1 a .cart:hover { color:#43B43E; } #top .nav1 a .center{ width:20px; float:left; #top .nav1 form .search { margin:10px 20px 0 0; float:left; display:inline; width:186px; height:23px; background:url(search_03.gif) no-repeat; } #top .nav1 form .search .keywords { width:140px; height:18px; display:inline; float:right; border:0px solid #cccccc; margin:2px 0 0 10px; } #top .nav1 form .search .btn { width:15px; height:16px; background:url(search_biao.gif); border:none; cursor:pointer; margin:4px 0 0 6px; display:inline; float:right; } #position { height:40px; line-height:40px; border-top:2px solid #F18336; color:#979693; } #position a { color:#333333; } #bottom { text-align:center; padding:50px 0; } #bottom p { color:#999999; } #bottom p a { color:#999999; font-size:30px; }"}],"posts":[{"title":"Markdown实用技巧","slug":"TT0010","date":"2017-12-22T00:28:14.470Z","updated":"2017-12-22T01:17:41.399Z","comments":true,"path":"2017/12/22/TT0010/","link":"","permalink":"https://tintingo.github.io/2017/12/22/TT0010/","excerpt":"字体和颜色效果如下：","text":"字体和颜色效果如下： 警告！ 代码如下：1&lt;font color=red face=\"黑体\"&gt;警告！&lt;/font&gt; 引号标记文字效果如下： 你好！代码如下：123&lt;blockquote&gt; &lt;p&gt;你好！&lt;/p&gt;&lt;/blockquote&gt; 显示图片效果如下：代码如下：1![WeChat](/images/WeChat.png) 文字连接1效果如下：https://tintingo.github.io 代码如下：1&lt;https://tintingo.github.io&gt; 文字连接2效果如下：TINTIN 代码如下：1[TINTIN](https://tintingo.github.io) 图片链接效果如下：代码如下：1[&lt;img src=\"https://图片地址\" class=\"nofancybox\" /&gt;](https://链接地址) 注意：在主题…/source/js/script.js文件中的if ($(this).parent().hasClass(‘fancybox’)) return;语句下加上代码:if ($(this).hasClass(‘nofancybox’)) return;","categories":[],"tags":[]},{"title":"Blog风格问题记载","slug":"TT0009","date":"2017-12-21T02:45:05.819Z","updated":"2017-12-22T00:44:28.695Z","comments":true,"path":"2017/12/21/TT0009/","link":"","permalink":"https://tintingo.github.io/2017/12/21/TT0009/","excerpt":"首页预览显示在.md中加:","text":"首页预览显示在.md中加: ;若想在预览中显示图片，则在.md标题处加中加photos，如下：12345---title: Blog风格问题记载photos: - \"/images/T0009.jpg\" #图片地址--- 英文主题汉化找到Blog文件中\\themes\\landscape\\languages文件夹打开，如下图所示，打开zh-CN.yml（中文简体）即可随意汉化。繁体打开zh-TW.yml（台湾繁体）。default.yml为默认主题语言，可将zh-CN.yml或者zh-TW.yml重命名为default.yml。 增加主题按钮选项打开主题配置文件_config.yml，在如下代码后添加：12345# Header Menumenu: Home: / Archives: archives About: about 若是主题中不含有的，则在Blog\\hexo\\source文件夹下自行添加.md文件。比如：我想添加一个生活的按钮，则在Blog\\hexo\\source文件夹下自行添加life.md的文件: 并修改代码为如下：123456# Header Menumenu: Home: / Archives: archives About: about life: life","categories":[],"tags":[]},{"title":"第一个MFC","slug":"TT0008","date":"2017-12-11T08:57:18.313Z","updated":"2017-12-21T01:58:37.513Z","comments":true,"path":"2017/12/11/TT0008/","link":"","permalink":"https://tintingo.github.io/2017/12/11/TT0008/","excerpt":"万事开头难！ 步骤一：新建MFC项目打开Visual Studio，文件–&gt;新建–&gt;项目，如图1所示：","text":"万事开头难！ 步骤一：新建MFC项目打开Visual Studio，文件–&gt;新建–&gt;项目，如图1所示：进入新建项目窗口后，左侧选择已安装–&gt;模板–&gt;Visual C++–&gt;MFC，中间选择MFC应用程序，下方自由命名名称和选择新建项目位置，最后点击确定，如图2所示： 确定后，选择MFC应用程序向导按如下图操作： 以上步骤完成后，进入图8的界面，至此，项目建立完成！ 步骤二：对话框编辑打开左侧工具箱–&gt;对话框编辑器，如图9所示， 删除对话框中确定按钮，从对话框编辑中拖一个Button和一个Edit Control到对话框中，将Button复制四份，Edit Control复制两份，如图10所示： 调整好大小，放好位置，鼠标放在Button右键–&gt;属性，在右下角属性栏的Caption修改按钮名，如图11所示： 步骤三：设置变量与编程鼠标放在Edit Control右键–&gt;添加变量，设置前两个Edit Control变量为E1、E2，设置后一个Edit Control变量为E3，类型：Value，变量类型：float，变量名：E1，如图12所示： 双击每一个控件，就进入主程序中，输入以下代码,运行(本地Windows调试器)：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265// MFConeDlg.cpp : 实现文件//#include \"stdafx.h\"#include \"MFCone.h\"#include \"MFConeDlg.h\"#include \"afxdialogex.h\"#ifdef _DEBUG#define new DEBUG_NEW#endif// 用于应用程序“关于”菜单项的 CAboutDlg 对话框class CAboutDlg : public CDialogEx&#123;public: CAboutDlg();// 对话框数据#ifdef AFX_DESIGN_TIME enum &#123; IDD = IDD_ABOUTBOX &#125;;#endif protected: virtual void DoDataExchange(CDataExchange* pDX); // DDX/DDV 支持// 实现protected: DECLARE_MESSAGE_MAP()&#125;;CAboutDlg::CAboutDlg() : CDialogEx(IDD_ABOUTBOX)&#123;&#125;void CAboutDlg::DoDataExchange(CDataExchange* pDX)&#123; CDialogEx::DoDataExchange(pDX);&#125;BEGIN_MESSAGE_MAP(CAboutDlg, CDialogEx)END_MESSAGE_MAP()// CMFConeDlg 对话框CMFConeDlg::CMFConeDlg(CWnd* pParent /*=NULL*/) : CDialogEx(IDD_MFCONE_DIALOG, pParent) , E2(0) , E3(0) , E1(0)&#123; m_hIcon = AfxGetApp()-&gt;LoadIcon(IDR_MAINFRAME);&#125;void CMFConeDlg::DoDataExchange(CDataExchange* pDX)&#123; CDialogEx::DoDataExchange(pDX); DDX_Text(pDX, IDC_EDIT2, E2); DDX_Text(pDX, IDC_EDIT3, E3); DDX_Text(pDX, IDC_EDIT1, E1);&#125;BEGIN_MESSAGE_MAP(CMFConeDlg, CDialogEx) ON_WM_SYSCOMMAND() ON_WM_PAINT() ON_WM_QUERYDRAGICON() ON_BN_CLICKED(IDC_BUTTON1, &amp;CMFConeDlg::OnBnClickedButton1) ON_BN_CLICKED(IDC_BUTTON2, &amp;CMFConeDlg::OnBnClickedButton2) ON_BN_CLICKED(IDC_BUTTON3, &amp;CMFConeDlg::OnBnClickedButton3) ON_BN_CLICKED(IDC_BUTTON4, &amp;CMFConeDlg::OnBnClickedButton4) ON_BN_CLICKED(IDC_BUTTON5, &amp;CMFConeDlg::OnBnClickedButton5) ON_EN_CHANGE(IDC_EDIT2, &amp;CMFConeDlg::OnEnChangeEdit2) ON_EN_CHANGE(IDC_EDIT1, &amp;CMFConeDlg::OnEnChangeEdit1) ON_EN_CHANGE(IDC_EDIT3, &amp;CMFConeDlg::OnEnChangeEdit3) ON_BN_CLICKED(IDCANCEL, &amp;CMFConeDlg::OnBnClickedCancel)END_MESSAGE_MAP()// CMFConeDlg 消息处理程序BOOL CMFConeDlg::OnInitDialog()&#123; CDialogEx::OnInitDialog(); // 将“关于...”菜单项添加到系统菜单中。 // IDM_ABOUTBOX 必须在系统命令范围内。 ASSERT((IDM_ABOUTBOX &amp; 0xFFF0) == IDM_ABOUTBOX); ASSERT(IDM_ABOUTBOX &lt; 0xF000); CMenu* pSysMenu = GetSystemMenu(FALSE); if (pSysMenu != NULL) &#123; BOOL bNameValid; CString strAboutMenu; bNameValid = strAboutMenu.LoadString(IDS_ABOUTBOX); ASSERT(bNameValid); if (!strAboutMenu.IsEmpty()) &#123; pSysMenu-&gt;AppendMenu(MF_SEPARATOR); pSysMenu-&gt;AppendMenu(MF_STRING, IDM_ABOUTBOX, strAboutMenu); &#125; &#125; // 设置此对话框的图标。 当应用程序主窗口不是对话框时，框架将自动 // 执行此操作 SetIcon(m_hIcon, TRUE); // 设置大图标 SetIcon(m_hIcon, FALSE); // 设置小图标 ShowWindow(SW_MINIMIZE); // TODO: 在此添加额外的初始化代码 return TRUE; // 除非将焦点设置到控件，否则返回 TRUE&#125;void CMFConeDlg::OnSysCommand(UINT nID, LPARAM lParam)&#123; if ((nID &amp; 0xFFF0) == IDM_ABOUTBOX) &#123; CAboutDlg dlgAbout; dlgAbout.DoModal(); &#125; else &#123; CDialogEx::OnSysCommand(nID, lParam); &#125;&#125;// 如果向对话框添加最小化按钮，则需要下面的代码// 来绘制该图标。 对于使用文档/视图模型的 MFC 应用程序，// 这将由框架自动完成。void CMFConeDlg::OnPaint()&#123; if (IsIconic()) &#123; CPaintDC dc(this); // 用于绘制的设备上下文 SendMessage(WM_ICONERASEBKGND, reinterpret_cast&lt;WPARAM&gt;(dc.GetSafeHdc()), 0); // 使图标在工作区矩形中居中 int cxIcon = GetSystemMetrics(SM_CXICON); int cyIcon = GetSystemMetrics(SM_CYICON); CRect rect; GetClientRect(&amp;rect); int x = (rect.Width() - cxIcon + 1) / 2; int y = (rect.Height() - cyIcon + 1) / 2; // 绘制图标 dc.DrawIcon(x, y, m_hIcon); &#125; else &#123; CDialogEx::OnPaint(); &#125;&#125;//当用户拖动最小化窗口时系统调用此函数取得光标//显示。HCURSOR CMFConeDlg::OnQueryDragIcon()&#123; return static_cast&lt;HCURSOR&gt;(m_hIcon);&#125;void CMFConeDlg::OnBnClickedButton1()&#123; // TODO: 在此添加控件通知处理程序代码 UpdateData(true);//从控件获得数据赋给变量 E3 = E1 + E2; UpdateData(false);//输出变量的值到控件 &#125;void CMFConeDlg::OnBnClickedButton2()&#123; // TODO: 在此添加控件通知处理程序代码 UpdateData(true);//从控件获得数据赋给变量 E3 = E1 - E2; UpdateData(false);//输出变量的值到控件 &#125;void CMFConeDlg::OnBnClickedButton3()&#123; // TODO: 在此添加控件通知处理程序代码 UpdateData(true);//从控件获得数据赋给变量 E3 = E1 * E2; UpdateData(false);//输出变量的值到控件&#125;void CMFConeDlg::OnBnClickedButton4()&#123; // TODO: 在此添加控件通知处理程序代码 UpdateData(true); if (E2 == 0) &#123; MessageBox(_T(\"除数不能为零！\")); return; &#125; E3 = E1 / E2; UpdateData(false);&#125;void CMFConeDlg::OnBnClickedButton5()&#123; // TODO: 在此添加控件通知处理程序代码 E1 = 0; E2 = 0; E3 = 0; UpdateData(false); GotoDlgCtrl((CEdit*)GetDlgItem(IDC_EDIT1));//设置焦点在第一个编辑框&#125;void CMFConeDlg::OnEnChangeEdit2()&#123; // TODO: 如果该控件是 RICHEDIT 控件，它将不 // 发送此通知，除非重写 CDialogEx::OnInitDialog() // 函数并调用 CRichEditCtrl().SetEventMask()， // 同时将 ENM_CHANGE 标志“或”运算到掩码中。 // TODO: 在此添加控件通知处理程序代码&#125;void CMFConeDlg::OnEnChangeEdit1()&#123; // TODO: 如果该控件是 RICHEDIT 控件，它将不 // 发送此通知，除非重写 CDialogEx::OnInitDialog() // 函数并调用 CRichEditCtrl().SetEventMask()， // 同时将 ENM_CHANGE 标志“或”运算到掩码中。 // TODO: 在此添加控件通知处理程序代码&#125;void CMFConeDlg::OnEnChangeEdit3()&#123; // TODO: 如果该控件是 RICHEDIT 控件，它将不 // 发送此通知，除非重写 CDialogEx::OnInitDialog() // 函数并调用 CRichEditCtrl().SetEventMask()， // 同时将 ENM_CHANGE 标志“或”运算到掩码中。 // TODO: 在此添加控件通知处理程序代码&#125;void CMFConeDlg::OnBnClickedCancel()&#123; // TODO: 在此添加控件通知处理程序代码 CDialogEx::OnCancel();&#125; 打开刚刚的新建项目目录：MFCone/Debug里就有个MFCone.exe，点击运行就成功了，如图13 完成喽！","categories":[],"tags":[]},{"title":"JAVA Web学习笔记","slug":"TT0007","date":"2017-12-11T08:57:18.312Z","updated":"2017-12-21T01:58:49.472Z","comments":true,"path":"2017/12/11/TT0007/","link":"","permalink":"https://tintingo.github.io/2017/12/11/TT0007/","excerpt":"声明：以下内容为学习范立锋等《Java Web程序设计教程》的笔记，大部分内容均出自原文！ 一、XMLXML-可拓展标记语言，是一种数据存储语言，用简单的标记来描述数据，其中，XML文件以.xml结尾。","text":"声明：以下内容为学习范立锋等《Java Web程序设计教程》的笔记，大部分内容均出自原文！ 一、XMLXML-可拓展标记语言，是一种数据存储语言，用简单的标记来描述数据，其中，XML文件以.xml结尾。1234567&lt;?xml version=\"1.0\" enconding=\"GB2312\"?&gt; %声明：版本号1.0；字符编码格式中文&lt;person&gt; %根元素，一个xml中只能有一个根元素，其他元素都包含在其中； &lt;!--姓名--!&gt; %注释 &lt;name&gt;TINTIN&lt;/name&gt; %元素 &lt;!--性别--!&gt; &lt;sex&gt;男&lt;/sex&gt;&lt;/person&gt; xml常见用途：1.不同应用程序间数据交互：xml提供一种不同应用程序间数据交互的公共标准；2.一种是数据多种样式：xml将信息的数据和显示样式分离开来（样式需用其他语言来定义，如CSS），这样同一份数据可添加多种式样；3.数据的分布式处理：xml可在Internet上自由传送，客户可从xml中提取到数据，因此，数据处理可在客户端完成，无需返回Web服务器，节省了Internet上的数据宽带。 二、CSSCSS-层叠样式表单，是一种表现HTML或XML等文件式样的语言（浏览器解释语言）。CSS语法包括：CSS选择符、CSS属性。（每个CSS选择符可包含一或多个CSS属性）12格式：选择符&#123;属性&#125;body&#123;color:blue&#125; %在&lt;body&gt;标记内，文本颜色为蓝色 XML中选择符可为标记名称或标记名称的id/class属性值。123456&lt;?xml version=\"1.0\" enconding=\"GB2312\"?&gt;&lt;?xml-stylesheet type=\"text/css\" href=\"game.css\"?&gt; %XML引用CSS文件格式，href值为.CSS的地址&lt;person&gt; &lt;name id=\"myNAME\"&gt;TINTIN&lt;/name&gt; &lt;sex class=\"yourSEX\"&gt;男&lt;/sex&gt;&lt;/person&gt; id属性的值是唯一的，唯一标记一个标记，而class属性可标记一组标记1234id格式：#id名&#123;属性1;属性2&#125;#myNAME&#123;color：black;size:10px&#125;class格式：.class名&#123;属性;属性2&#125;.yourSEX&#123;color：blue;size:10px&#125; CSS代码也可直接写到XML代码中，但不方便维护，故不推荐使用。 三、JavaScriptJavaScript是一种允许在HTML基础上进行交互式Web网页开发的脚本语言，JavaScript大多用在客户端数据校验，减轻了服务器的负载量，使客户浏览更流畅。HTML使用JavaScript的两种方式：1.外部引用：123456789&lt;html&gt; &lt;head&gt; &lt;script type=\"text/javascript\" src=\"game.js\"&gt;&lt;/script&gt; %可在&lt;head&gt;或&lt;body&gt;中如何地方出现 &lt;/head&gt; &lt;body&gt; &lt;p id=\"hello\"&gt;你好！&lt;/p&gt; &lt;button type=\"button\" onclick=\"myFunction()\"&gt;打招呼&lt;/button&gt; &lt;/body&gt;&lt;/html&gt; 其中，game.js中可以添加任意多的类和函数，实际应用推荐使用外部引用方式，这样更安全也更易维护。game.js文件如下：1234function myFunction()&#123;document.getElementById(\"hello\").innerHTML=\"Hello!\";&#125; 2.内部调用：1234567891011121314&lt;html&gt; &lt;body&gt; &lt;p id=\"hello\"&gt;你好！&lt;/p&gt; &lt;button type=\"button\" onclick=\"myFunction()\"&gt;打招呼&lt;/button&gt; &lt;script type=\"text/javascript\"&gt; &lt;!-- %加注释是为了防止浏览器不支持javascript时出现源码 function myFunction() &#123; document.getElementById(\"hello\").innerHTML=\"Hello!\"; &#125; //--&gt; &lt;/script&gt; &lt;/body&gt;&lt;/html&gt; 四、Ajax当用户填写完信息提交表单时，会向服务器发送请求，服务器收到请求并处理表单数据后才会给用户新页面。但当大量用户同时发出请求时，由于服务器需要处理大量请求会导致用户刷新页面变慢，此时，Ajax就至关重要了。Ajax是一种结合了XML和JavaScript等技术建立交互式网页应用的技术。Ajax包含技术：XML、CSS、JavaScript、XMLHttpRequest、DOM、XHTML、XSLT。","categories":[],"tags":[]},{"title":"HTML5基础代码","slug":"TT0006","date":"2017-12-11T08:57:18.311Z","updated":"2017-12-21T01:59:01.260Z","comments":true,"path":"2017/12/11/TT0006/","link":"","permalink":"https://tintingo.github.io/2017/12/11/TT0006/","excerpt":"设置标签页logo1&lt;link rel=\"icon\" href=\"images/log.png\"/&gt;","text":"设置标签页logo1&lt;link rel=\"icon\" href=\"images/log.png\"/&gt; 设置背景图片1&lt;body background=\"images/BG3.jpg\"&gt; 设置段落格式1&lt;p style=\"font-family:arial;color:black;font-size:35px;text-align:center;\"&gt; 设置图片超链接12341.当前页面打开&lt;a href=\"https://***.com/\"&gt;&lt;img border=\"0\" src=\"images/download.png\" alt=\"Download\" width=\"30\" height=\"30\"&gt;下载&lt;/a&gt;2.新页面打开&lt;a href=\"https://***.com/\" target=\"_black\"&gt;&lt;img border=\"0\" src=\"images/download.png\" alt=\"Download\" width=\"30\" height=\"30\"&gt;下载&lt;/a&gt; 空格1&amp;nbsp 画横线1234561.虚线（dashed）&lt;hr style=\"height:10px;border:none;border-top:10px dashed black;\" /&gt;2.实线（solid）&lt;hr style=\"height:10px;border:none;border-top:10px solid black;\" /&gt;3.双实线（上颜色：black；下颜色：blue）&lt;hr style=\"height:10px;border:none;border-top:10px black blue;\" /&gt; 正文图片1&lt;div align=\"center\" style=\"background-color:honeydew\"&gt;&lt;img src=\"images/f001.jpg\" style=\"width:100%;\"/&gt;&lt;/div&gt;","categories":[],"tags":[]},{"title":"音乐|视频更新","slug":"TT0005","date":"2017-12-11T08:57:18.310Z","updated":"2017-12-21T01:59:11.263Z","comments":true,"path":"2017/12/11/TT0005/","link":"","permalink":"https://tintingo.github.io/2017/12/11/TT0005/","excerpt":"插入视频法（一）12345&lt;iframe align=center width=\"736\" height=\"400\" src=\"/movies/M01.mp4\" frameborder=0 allowfullscreen&gt; &lt;/iframe&gt;","text":"插入视频法（一）12345&lt;iframe align=center width=\"736\" height=\"400\" src=\"/movies/M01.mp4\" frameborder=0 allowfullscreen&gt; &lt;/iframe&gt; src=”/movies/M01.mp4”为视频地址。 法（二）123&lt;video width=\"736\" height=\"400\" controls&gt;&lt;source src=\"/movies/M01.mp4\"&gt;&lt;/video&gt; 插入音乐123&lt;iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=736 height=260 src=\"/musics/m001.mp3\"&gt; &lt;/iframe&gt;","categories":[],"tags":[]},{"title":"一些常用Matlab代码记录","slug":"TT0003","date":"2017-12-11T08:57:18.309Z","updated":"2017-12-28T08:30:15.040Z","comments":true,"path":"2017/12/11/TT0003/","link":"","permalink":"https://tintingo.github.io/2017/12/11/TT0003/","excerpt":"记忆力差？用过的代码老忘记？一次又一次的上网搜?好浪费时间！写在博客里方便随时查阅~~~~","text":"记忆力差？用过的代码老忘记？一次又一次的上网搜?好浪费时间！写在博客里方便随时查阅~~~~ 常用读写方式Excel读写（xlsread、xlswrite）123456%读mytxt = xlsread('C:/filename.xls')%写txt = ['a' 's' 'd' 'f' 'g' 'h'];mytxt = xlswrite('C:/filename.xls',txt) txt读写12345678%读fid = fopen('C:/words.txt','r');txt = textscan(fid,'%s');fclose(fid);%写txt = ['a' 's' 'd' 'f' 'g' 'h'];dlmwrite('C:/myfile.txt', txt, 'delimiter', '\\t') 图片读写12345%读I = imread('C:/im01.jpg');%写imwrite(I,'C:/im01.jpg'); mat读写1234567%读Data = load('C:/myfile.mat')%%写save DATA %workspace中的内容全部保存save data.mat -regexp '[^data1 ^data2]' %保存workspace中除data1和data2的内容%也可在workspace中想要保存的内容右键保存 矩阵随机交换行（列）123456789% 给矩阵A随机换行A = [1 2 3; 4 5 6; 7 8 9; 10 11 12] h = randperm(size(A, 1)); %randperm生成1:size(A, 1)的随机数 B = A(h,:)% 给矩阵A随机换行A = [1 2 3; 4 5 6; 7 8 9; 10 11 12] l = randperm(size(A, 2)); C = A(:,l) 比较两匹配123A = ['AAA'];B = ['BBB'];result = strcmpi(A,B); %结果为1，A、B相同，结果为0，A、B不同 打开文件夹1filename = uigetdir('选择一个目录'); 超链接1web https://tintingo.github.io/ -browser; 弹出对话框1msgbox(' 任务完成！') GUI常用命令GUI按钮换背景图12I = importdata('image\\eye.jpg');set(handles.pushbutton1,'CDATA',I); GUI更换自己的logo1234h = handles.figure1; newIcon = javax.swing.ImageIcon('image\\logo.jpg');figFrame = get(h,'JavaFrame'); figFrame.setFigureIcon(newIcon); GUI更设置面背景123456Hd_axes = axes('units','normalized','position',[0 0 1 1],'tag','Hd_axes');uistack(Hd_axes,'down')II = imread('image\\background.jpg');image(II)colormap grayset(Hd_axes,'handlevisibility','off','visible','off'); GUI可编辑文本框显示文字1set(handles.edit1, 'String','文字') GUI获取可编辑文本框里的文字1txt = get(handles.edit1,'string'); GUI可编辑文本框显示时间123function timercallback(obj, event,handles)str = datestr(now, 'HH:MM:SS');set(handles.edit1, 'String',str); GUI打包成exe1deploytool 画网络结构图自定义节点名12labels = &#123;'one','two','three','four'&#125;;draw_graph(dag,labels); 画网络结构图的两种方式12draw_graph( dag ); %dag为网络结构边的关系h = view(biograph( dag )); matlab关联.m文件（安装了matlab，但无法双击打开.m文件）法一1234cwd=pwd;cd([matlabroot '\\toolbox\\matlab\\winfun\\private']);fileassoc('add',&#123;'.m','.mat','.fig','.p','.mdl',['.' mexext]&#125;); cd(cwd); 法二123456步骤1：到本站下载页下载标题为“matlab关联.m文件”的文件步骤2：（1）解压后，运行matlab软件 -&gt; 打开 -&gt; associateFiles.m -&gt; F5运行 （2）运行完毕后文件夹中会生成一个.reg文件，双击该文件，完成即可（3）找一个.m文件,右键 -&gt; 打开方式，若有matlab选项，说明关联成功 生成‘ABCDE’这5个字母的随机组合1s = perms('ABCDE'); %随机生成Cnn种组合 同一figure显示多个图1subplot(n,m,i) %一个figure分为n行，m列。i表示第i个图。 22.给一个数列（矩阵）里的数排序（从大到小）123[a b]=sort(A(:)); %从小到大排序a = fliplr(a'); %取倒序b = fliplr(b'); 字符匹配判断两字符是否匹配1234567891011&gt;&gt; regexpi('asdf','asdf')ans = 1&gt;&gt; regexpi('asdf','agsdf')ans = [] 判断字符Str中是否含有‘http’字符1234567891011&gt;&gt; Str='httpthestartingindicesoft';strfind(Str,'http')ans = 1&gt;&gt; Str='httpthestartingindicesofthttp';strfind(Str,'http')ans = 1 26 消除matlAB启动时的Warning：Name is nonexistent or not a directory…12步骤：file -&gt; set path -&gt; Defualt -&gt; Yes -&gt; 重启matlab 删除cell中的空元素1A(cellfun(@isempty,A)) = []; matlab添加工具箱1234567步骤1：将工具箱文件夹放到matlab安装目录下的toolbox下；步骤2：addpath(genpath('C:\\MATLAB\\toolbox\\BNT')); savepath; 步骤3：which test_BNT.m %test_BNT.m为工具箱任意中的一个函数，若返回路径，则添加成功","categories":[],"tags":[]},{"title":"如何用Matlab设计GUI？","slug":"TT0002","date":"2017-12-11T08:57:18.308Z","updated":"2017-12-21T01:58:05.978Z","comments":true,"path":"2017/12/11/TT0002/","link":"","permalink":"https://tintingo.github.io/2017/12/11/TT0002/","excerpt":"什么是GUI？matlab编程可以设计GUI吗？GUI定义:GUI指的是图形用户界面（Graphical User Interface，GUI），也称之为图形用户接口，GUI是用图形化方式显示的计算机操作用户界面（可视化）。我们通常都是使用matlab来做计算，matlab还可以设计GUI？matlab编当然可以设计GUI！那么，使用matlab到底如何设计GUI呢？往下看喽！","text":"什么是GUI？matlab编程可以设计GUI吗？GUI定义:GUI指的是图形用户界面（Graphical User Interface，GUI），也称之为图形用户接口，GUI是用图形化方式显示的计算机操作用户界面（可视化）。我们通常都是使用matlab来做计算，matlab还可以设计GUI？matlab编当然可以设计GUI！那么，使用matlab到底如何设计GUI呢？往下看喽！ 步骤一：新建GUI打开Matlab，在Command Window输入命令：1guide 回车后打开窗口如下 图1图1中有四种GUI可选，在此选第一个“Blank GUI（Default）”空白的GUI。OK后来到如下窗口： 图2图2左侧有14个常用GUI属性可选，包括：按钮（Button），滑块（Slider），单选按钮（Radio Button），复选框（Check Box），编辑文本（Edit Text），静态文本(Static Text)，上托项目单（Pop-up Menu），列表框（Listbox），开关按钮（Toggle Button），列表（Table），坐标轴（Axes），面板（Panel），按钮组（Button Group），ActiveX控件（ActiveX Control）.在此，我们先做个简单的“显示图片”的GUI看看。将左侧“坐标轴（Axes）”和“按钮（Button）”各一个拖入操作区并自定义大小，如图3所示：图3保存后除了你自定义文件名的.fig文件外，还会自动生成一个与你命名相同的.m文件，到此，新建GUI完成。 步骤二：fig自定义在Matlab右键上面生成的.fig文件，选择“Open in GUIDE”使用GUIDE打开，双击以上添加的坐标轴或者按钮打开用户控件信息如图4所示：图4你可在图4中修改任意参数来改变控件的属性，包括：尺寸，文字，颜色等。在此就不一一介绍喽！比如：我修改按钮中的FontSize为：15.0，将String改为：选择图片，就会出现如图5所示效果：图5到此，就可得到你想要的GUI界面喽！ 步骤三：程序编辑双击打开上面生成的.m文件，在pushbutton1_Callback(hObject, eventdata, handles)函数处编写如下代码：123456789101112% --- Executes on button press in pushbutton1.function pushbutton1_Callback(hObject, eventdata, handles)% hObject handle to pushbutton1 (see GCBO)% eventdata reserved - to be defined in a future version of MATLAB% handles structure with handles and user data (see GUIDATA)[filename,filepath] = uigetfile(&#123;'*.bmp;*.jpg;*.png;*.jpeg;*.tif',... '文件类型 (*.bmp,*.jpg,*.png,*.jpeg,*.tif)';'*.*', '所有文件(*.*)'&#125;,... 'Pick an image');file = strcat(filepath,filename);in = imread(file);axes(handles.axes1);imshow(in); F5运行后就可看到如下效果：图6点击“选择图片”按钮进入图7选择图片文件窗口：图7选择图片后就可显示出来，如图8所示：图8 怎么样！开心吧！我的第一个GUI完成了！后续还将会进一步学习！","categories":[],"tags":[]},{"title":"如何搭建个人博客？","slug":"TT0001","date":"2017-11-04T03:03:44.397Z","updated":"2017-12-21T01:58:27.285Z","comments":true,"path":"2017/11/04/TT0001/","link":"","permalink":"https://tintingo.github.io/2017/11/04/TT0001/","excerpt":"当你遇到一个似曾相识的知识却突然想不起来时：你需要一个个人博客！当你觉得一段经历难忘而值得分享却不知所措时：你需要一个个人博客！","text":"当你遇到一个似曾相识的知识却突然想不起来时：你需要一个个人博客！当你觉得一段经历难忘而值得分享却不知所措时：你需要一个个人博客！ 哎呦！不错哟！博主在网上搜索了多种方法，折腾了1天都没成功（都有坑），还一度想放弃搭建，但“柳暗花明又一村”的是，我综合了多篇博文，终于我成功了！在此：哈哈大笑！网络上的方法很多，您可以搜搜看，当然，您也可以往下看！ 现在开始步骤一：下载安装软件到官网下载： NodeJs Git (在官网上无法下载的话，可以到“白杜云”上搜索下载)安装NodeJs时按正常步骤就行，安装Git时需要注意如下： 安装完成后，“win+R”打开“运行”键入“cmd”回车进入命令窗口，输入如下命令：12node -vgit -–version 若返回版本信息则说明安装成功，否则就重新安装吧！ 安装Hexo随便在电脑桌面或者任意盘内新建一个文件夹，命名为“Blog”，在该文件夹中“shift+右键”选用“Git Bash”打开命令窗口，并键入如下命令：12$ npm install -g hexo $ hexo 返回hexo信息则说明安装成功！紧接着输入：1$ hexo init hexo 步骤二：新建仓库（New repository）在你注册了GitHub账号后，点击“New repository”创建仓库，注意：命名时应命名为username.github.io，其中，username为你几己的GitHub用户名。 到之前新建的文件夹的“hexo”文件夹下“shift+右键”选用“Git Bash”打开命令窗口，并键入如下命令：12$ cd C:/Users/Administrator/.ssh$ ssh-keygen -t rsa -C \"####@163.com（注册GitHub时的邮箱）\" 一直回车，和“Y”即可。在你的GitHub找到“Settings”，打开左下角有个“SSH and GPG keys”，点击“New SSH key”输入标题后在地址：“C:/Users/Administrator/.ssh”找到id_rsa.pub打开将里面的内容全部复制，并粘贴到“key”里，按下“Add SSH key”即可。 现在，回到之前新建的文件夹的“hexo”文件夹下“shift+右键”选用“Git Bash”打开命令窗口，并键入如下命令：123$ npm install$ hexo generate$ hexo server 访问：http://localhost:4000/若出现初始化的博客，则“Ctrl+C”停止刚才的命令。 步骤三：网站配置在之前新建的文件夹的“hexo”文件夹下找到_config.yml文件打开，在内容最后12deploy: type: 修改为如下： 1234deploy: type: git repository: git@github.com:**********.github.io.git #SSH地址在你上面新建的GitHub仓库里点击“Clone or download”选“Use SSH”并复制到此 branch: master 好啦！通过访问你的GitHub地址https://username.github.io即可看到属于你自己的博客喽！（注意：地址中的username更换成你几己的GitHub用户名即可） 步骤四：更新博客建好自己的博客后，就迫不及待的想将自己的想写的东西放在上面喽！首先：在你建博客的文件夹目录下“shift+右键”选用“Git Bash”打开命令窗口，并键入如下命令：1$ hexo new newblog （注意：newblog为你新建博客的文件名，可随意取名（没试过中文名）） 在你建博客的文件夹目录下的source/_post目录下找newblog.md文件，打开内容就可以按照自己意愿修改喽！ 然后，同样在你建博客的文件夹目录下“shift+右键”选用“Git Bash”打开命令窗口，并键入如下命令：1234567$ hexo clean$ hexo g$ npm install hexo-deployer-git --save$ hexo d 好了，访问https://username.github.io看看吧！（注意：如果没有显示不用担心，多刷新几遍就出来了。如果实在还是没有的话，以上操作重新来过！） 就写到这吧！怎么更改主题再学习吧！","categories":[],"tags":[]}]}